
export interface Country {
  code: string;
  name: string;
  flag: string;
  isGDPR: boolean;
}

export const GDPR_COUNTRIES = [
  'AT',
  'BE',
  'BG',
  'HR',
  'CY',
  'CZ',
  'DK',
  'EE',
  'FI',
  'FR',
  'DE',
  'GR',
  'HU',
  'IE',
  'IT',
  'LV',
  'LT',
  'LU',
  'MT',
  'NL',
  'PL',
  'PT',
  'RO',
  'SK',
  'SI',
  'ES',
  'SE',
  'IS',
  'LI',
  'NO',
];

export const COUNTRIES: Country[] = [
  { code: 'US', name: 'United States', flag: 'ðŸ‡ºðŸ‡¸', isGDPR: false },
  { code: 'GB', name: 'United Kingdom', flag: 'ðŸ‡¬ðŸ‡§', isGDPR: false },
  { code: 'CA', name: 'Canada', flag: 'ðŸ‡¨ðŸ‡¦', isGDPR: false },
  { code: 'AU', name: 'Australia', flag: 'ðŸ‡¦ðŸ‡º', isGDPR: false },
  { code: 'NZ', name: 'New Zealand', flag: 'ðŸ‡³ðŸ‡¿', isGDPR: false },
  { code: 'JP', name: 'Japan', flag: 'ðŸ‡¯ðŸ‡µ', isGDPR: false },
  { code: 'KR', name: 'South Korea', flag: 'ðŸ‡°ðŸ‡·', isGDPR: false },
  { code: 'CN', name: 'China', flag: 'ðŸ‡¨ðŸ‡³', isGDPR: false },
  { code: 'IN', name: 'India', flag: 'ðŸ‡®ðŸ‡³', isGDPR: false },
  { code: 'BR', name: 'Brazil', flag: 'ðŸ‡§ðŸ‡·', isGDPR: false },
  { code: 'MX', name: 'Mexico', flag: 'ðŸ‡²ðŸ‡½', isGDPR: false },
  { code: 'AR', name: 'Argentina', flag: 'ðŸ‡¦ðŸ‡·', isGDPR: false },

  // GDPR Countries
  { code: 'AT', name: 'Austria', flag: 'ðŸ‡¦ðŸ‡¹', isGDPR: true },
  { code: 'BE', name: 'Belgium', flag: 'ðŸ‡§ðŸ‡ª', isGDPR: true },
  { code: 'BG', name: 'Bulgaria', flag: 'ðŸ‡§ðŸ‡¬', isGDPR: true },
  { code: 'HR', name: 'Croatia', flag: 'ðŸ‡­ðŸ‡·', isGDPR: true },
  { code: 'CY', name: 'Cyprus', flag: 'ðŸ‡¨ðŸ‡¾', isGDPR: true },
  { code: 'CZ', name: 'Czech Republic', flag: 'ðŸ‡¨ðŸ‡¿', isGDPR: true },
  { code: 'DK', name: 'Denmark', flag: 'ðŸ‡©ðŸ‡°', isGDPR: true },
  { code: 'EE', name: 'Estonia', flag: 'ðŸ‡ªðŸ‡ª', isGDPR: true },
  { code: 'FI', name: 'Finland', flag: 'ðŸ‡«ðŸ‡®', isGDPR: true },
  { code: 'FR', name: 'France', flag: 'ðŸ‡«ðŸ‡·', isGDPR: true },
  { code: 'DE', name: 'Germany', flag: 'ðŸ‡©ðŸ‡ª', isGDPR: true },
  { code: 'GR', name: 'Greece', flag: 'ðŸ‡¬ðŸ‡·', isGDPR: true },
  { code: 'HU', name: 'Hungary', flag: 'ðŸ‡­ðŸ‡º', isGDPR: true },
  { code: 'IE', name: 'Ireland', flag: 'ðŸ‡®ðŸ‡ª', isGDPR: true },
  { code: 'IT', name: 'Italy', flag: 'ðŸ‡®ðŸ‡¹', isGDPR: true },
  { code: 'LV', name: 'Latvia', flag: 'ðŸ‡±ðŸ‡»', isGDPR: true },
  { code: 'LT', name: 'Lithuania', flag: 'ðŸ‡±ðŸ‡¹', isGDPR: true },
  { code: 'LU', name: 'Luxembourg', flag: 'ðŸ‡±ðŸ‡º', isGDPR: true },
  { code: 'MT', name: 'Malta', flag: 'ðŸ‡²ðŸ‡¹', isGDPR: true },
  { code: 'NL', name: 'Netherlands', flag: 'ðŸ‡³ðŸ‡±', isGDPR: true },
  { code: 'PL', name: 'Poland', flag: 'ðŸ‡µðŸ‡±', isGDPR: true },
  { code: 'PT', name: 'Portugal', flag: 'ðŸ‡µðŸ‡¹', isGDPR: true },
  { code: 'RO', name: 'Romania', flag: 'ðŸ‡·ðŸ‡´', isGDPR: true },
  { code: 'SK', name: 'Slovakia', flag: 'ðŸ‡¸ðŸ‡°', isGDPR: true },
  { code: 'SI', name: 'Slovenia', flag: 'ðŸ‡¸ðŸ‡®', isGDPR: true },
  { code: 'ES', name: 'Spain', flag: 'ðŸ‡ªðŸ‡¸', isGDPR: true },
  { code: 'SE', name: 'Sweden', flag: 'ðŸ‡¸ðŸ‡ª', isGDPR: true },
  { code: 'IS', name: 'Iceland', flag: 'ðŸ‡®ðŸ‡¸', isGDPR: true },
  { code: 'LI', name: 'Liechtenstein', flag: 'ðŸ‡±ðŸ‡®', isGDPR: true },
  { code: 'NO', name: 'Norway', flag: 'ðŸ‡³ðŸ‡´', isGDPR: true },

  // Other countries
  { code: 'CH', name: 'Switzerland', flag: 'ðŸ‡¨ðŸ‡­', isGDPR: false },
  { code: 'RU', name: 'Russia', flag: 'ðŸ‡·ðŸ‡º', isGDPR: false },
  { code: 'TR', name: 'Turkey', flag: 'ðŸ‡¹ðŸ‡·', isGDPR: false },
  { code: 'AE', name: 'United Arab Emirates', flag: 'ðŸ‡¦ðŸ‡ª', isGDPR: false },
  { code: 'SA', name: 'Saudi Arabia', flag: 'ðŸ‡¸ðŸ‡¦', isGDPR: false },
  { code: 'IL', name: 'Israel', flag: 'ðŸ‡®ðŸ‡±', isGDPR: false },
  { code: 'SG', name: 'Singapore', flag: 'ðŸ‡¸ðŸ‡¬', isGDPR: false },
  { code: 'MY', name: 'Malaysia', flag: 'ðŸ‡²ðŸ‡¾', isGDPR: false },
  { code: 'TH', name: 'Thailand', flag: 'ðŸ‡¹ðŸ‡­', isGDPR: false },
  { code: 'ID', name: 'Indonesia', flag: 'ðŸ‡®ðŸ‡©', isGDPR: false },
  { code: 'PH', name: 'Philippines', flag: 'ðŸ‡µðŸ‡­', isGDPR: false },
  { code: 'VN', name: 'Vietnam', flag: 'ðŸ‡»ðŸ‡³', isGDPR: false },
  { code: 'ZA', name: 'South Africa', flag: 'ðŸ‡¿ðŸ‡¦', isGDPR: false },
  { code: 'EG', name: 'Egypt', flag: 'ðŸ‡ªðŸ‡¬', isGDPR: false },
  { code: 'NG', name: 'Nigeria', flag: 'ðŸ‡³ðŸ‡¬', isGDPR: false },
  { code: 'KE', name: 'Kenya', flag: 'ðŸ‡°ðŸ‡ª', isGDPR: false },
  { code: 'CL', name: 'Chile', flag: 'ðŸ‡¨ðŸ‡±', isGDPR: false },
  { code: 'CO', name: 'Colombia', flag: 'ðŸ‡¨ðŸ‡´', isGDPR: false },
  { code: 'PE', name: 'Peru', flag: 'ðŸ‡µðŸ‡ª', isGDPR: false },
].sort((a, b) => a.name.localeCompare(b.name));

export const getCountryByCode = (code: string): Country | undefined => {
  return COUNTRIES.find(country => country.code === code);
};

export const detectUserRegion = (): string => {
  // In a real app, this would use device locale or IP geolocation
  // For now, return US as default
  const locale = 'en-US'; // Would be: Localization.locale
  const regionCode = locale.split('-')[1] || 'US';
  return regionCode;
};
